<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Configure TinyVMI on TinyVMI Documentation</title>
    <link>https://tinyvmi.github.io/get-started/configuration/</link>
    <description>Recent content in Configure TinyVMI on TinyVMI Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Jun 2018 22:21:41 -0400</lastBuildDate>
    
	<atom:link href="https://tinyvmi.github.io/get-started/configuration/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Update XSM FLASK Policy</title>
      <link>https://tinyvmi.github.io/get-started/configuration/update-xsm-flask-policy/</link>
      <pubDate>Mon, 04 Jun 2018 22:21:07 -0400</pubDate>
      
      <guid>https://tinyvmi.github.io/get-started/configuration/update-xsm-flask-policy/</guid>
      <description>NOTE  Before this step, it is required to install Xen with FLASK enabled and to have a guest VM to be monitored by TinyVMI. To do so, see instructions here.
 The following assumes the XSM FLASK policy is booted from file /boot/flask/xenpolicy. However, the file name can be changed to other ones as shown here. Or can be dynamically loaded after booting via xl loadpolicy &amp;lt;xenpolicy_file&amp;gt;.
    1.</description>
    </item>
    
    <item>
      <title>Update Stubdom Makefile</title>
      <link>https://tinyvmi.github.io/get-started/configuration/update-stubdom-makefile/</link>
      <pubDate>Mon, 04 Jun 2018 22:24:30 -0400</pubDate>
      
      <guid>https://tinyvmi.github.io/get-started/configuration/update-stubdom-makefile/</guid>
      <description>The following changes are made to xen-src/stubdom/Makefile to support the compilation of TinyVMI in Xen source tree (full makefile):
--- stubdom/Makefile.old	2017-12-13 06:37:59.000000000 -0500 +++ stubdom/Makefile	2018-05-10 16:44:54.053957803 -0400 @@ -61,7 +61,7 @@  TARGET_LDFLAGS += -nostdlib -L$(CROSS_PREFIX)/$(GNU_TARGET_ARCH)-xen-elf/lib -TARGETS=$(STUBDOM_TARGETS) +TARGETS=$(STUBDOM_TARGETS) c xenstore tinyvmi  STUBDOMPATH=&amp;#34;stubdompath.sh&amp;#34; genpath-target = $(call buildmakevars2file,$(STUBDOMPATH)) @@ -493,6 +493,16 @@  c: $(CROSS_ROOT) c-minios-config.mk CPPFLAGS=&amp;#34;$(TARGET_CPPFLAGS) $(shell cat c-minios-config.mk)&amp;#34; CFLAGS=&amp;#34;$(TARGET_CFLAGS)&amp;#34; $(MAKE) DESTDIR= -C $@ LWIPDIR=$(CURDIR)/lwip-$(XEN_TARGET_ARCH) + +### +# tinyvmi based on c but no glib, 2014.</description>
    </item>
    
    <item>
      <title>Get Target Guest Info</title>
      <link>https://tinyvmi.github.io/get-started/configuration/get-target-guest-info/</link>
      <pubDate>Mon, 04 Jun 2018 22:24:45 -0400</pubDate>
      
      <guid>https://tinyvmi.github.io/get-started/configuration/get-target-guest-info/</guid>
      <description>Start Target VM with FLASK label According to our setup in Update XSM FLASK Policy, a VM labeled with domU has priviledges to intropsect another domU&amp;rsquo;s physical memory. Now we can label TinyVMI with domU to grant the VM of TinyVMI with those privileges.
Change xl config file for the target VM. Add the following line to this file:
seclabel=&#39;system_u:system_r:domU_t&#39;  Now you can start target VM by running xl create &amp;lt;domain_config_file&amp;gt;</description>
    </item>
    
    <item>
      <title>Configure TinyVMI with Target Info</title>
      <link>https://tinyvmi.github.io/get-started/configuration/configure-tinyvmi-with-target-guest-info/</link>
      <pubDate>Mon, 04 Jun 2018 22:25:06 -0400</pubDate>
      
      <guid>https://tinyvmi.github.io/get-started/configuration/configure-tinyvmi-with-target-guest-info/</guid>
      <description>1. Compile libvmi.conf run
xxd -i ~/etc/libvmi.conf &amp;gt; ~/etc/target_libvmi_conf_file.c  2. Compile system map run
xxd -i ~/etc/System.map-\&amp;lt;kernel_version&amp;gt; &amp;gt; ~/etc/target_libvmi_sysmap.c  Then, copy the following code to new file ~/etc/target_libvmi_sysmap.h:
#ifndef TARGET_LIBVMI_CONF_SYSMAP_H  #define TARGET_LIBVMI_CONF_SYSMAP_H  /** * define system_map_string for Linux * change this if use another system map * all the System_map_* variables are declared here, and * defined at file /tiny-vmi/config/libvmi_conf_file_sysmap_*.c * the definition is generated by xxd command which coverts a file * to ASCII string codes: xxd -i System_map_* */ #define linux_system_map_string System_map_4_4_0_101_generic  #define linux_system_map_string_len System_map_4_4_0_101_generic_len  extern unsigned char System_map_4_4_0_101_generic[]; extern unsigned int System_map_4_4_0_101_generic_len; #define linux_system_map_string_SRC_FILE &amp;#34;/tiny-vmi/config/target_libvmi_sysmap.</description>
    </item>
    
  </channel>
</rss>